name: my workflow

on:
  push:
    branches: [main]

jobs:
  job1:
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      output1: ${{ steps.step1.outputs.test }}
      output2: ${{ steps.step2.outputs.test }}
    steps:
      - id: step1
        run: echo "::set-output name=test::hello"
      - id: step2
        run: echo "::set-output name=test::world"
  job2:
    runs-on: ubuntu-latest
    needs: job1
    steps:
      - run: echo ${{needs.job1.outputs.output1}} ${{needs.job1.outputs.output2}}



#name: Django CI
#
#on:
#  push:
#    branches: [ main ]
#  pull_request:
#    branches: [ main ]
#
#jobs:
#  build:
#
#    runs-on: ubuntu-latest
#    strategy:
#      max-parallel: 4
#      matrix:
#        python-version: [3.9]
#
#    steps:
#      - uses: actions/checkout@v2
#      - name: Set up Python ${{ matrix.python-version }}
#        uses: actions/setup-python@v2
#        with:
#          python-version: ${{ matrix.python-version }}
#      - name: Install Dependencies
#        run: |
#          python -m pip install --upgrade pip
#          pip install -r requirements.txt
#      - name: Run Tests
#        run: |
#          python manage.py test
#
#  deploy:
#    needs: [build]
#    runs-on: ubuntu-latest
#    environment: prod
#    strategy:
#      max-parallel: 4
#      matrix:
#        python-version: [3.9]
#    steps:
#      - uses: actions/checkout@v2
#      - name: Set up Python ${{ matrix.python-version }}
#        uses: actions/setup-python@v2
#        with:
#          python-version: ${{ matrix.python-version }}
#      - name: Create SSH config
#        run: |
#          mkdir ~/.ssh
#          echo $SSH_CONFIG >> ~/.ssh/config
#        env:
#          SSH_CONFIG: ${{ secrets.SSH_CONFIG }}
#      - name: Install SSH Key
#        uses: shimataro/ssh-key-action@v2
#        with:
#          key: ${{ secrets.SSH_PRIVATE_KEY }}
#          known_hosts: 'just-a-placeholder-so-we-dont-get-errors'
#      - name: Adding Known Hosts
#        run: ssh-keyscan -p 2222 -t rsa -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
#      - name: Prepare before deploy
#        run: |
#          sudo apt-get install -yqq git gcc g++ binutils musl-dev libffi-dev libssl-dev make openssh-client
#          python -m pip install --upgrade pip
#          pip install -r requirements.txt
#          mkdir -p ~/.ssh
#      - name: Deploy staging
##        env:
##          DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
##          DEPLOY_HOSTS: ${{ secrets.DEPLOY_HOSTS }}
##          DEPLOY_HOST_NAMES: ${{ secrets.DEPLOY_HOST_NAMES }}
##          DEPLOY_KNOWN_HOST: ${{ secrets.DEPLOY_KNOWN_HOST }}
##          DEPLOY_USE_CHRONY: "true"
##          DEPLOY_STAGING_SYSTEM_PRIVATE_KEY: ${{ secrets.DEPLOY_STAGING_PRIVATE_KEY }}
##          DEPLOY_SYSTEM_PRIVATE_KEY: ${{ secrets.DEPLOY_SYSTEM_PRIVATE_KEY }}
##          DEPLOY_STAGING_PRIVATE_KEY: ${{ secrets.DEPLOY_STAGING_PRIVATE_KEY }}
#        run: |
#          pwd
#          fab stage deploy:branch=main